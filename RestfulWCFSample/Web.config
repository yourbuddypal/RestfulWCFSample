<?xml version="1.0" encoding="utf-8"?>
<!--
  For more information on how to configure your ASP.NET application, please visit
  https://go.microsoft.com/fwlink/?LinkId=169433
  -->
<configuration>
	<system.web>
		<compilation debug="true"
								 targetFramework="4.6.1"/>
		<httpRuntime targetFramework="4.6.1"/>
	</system.web>
	<system.serviceModel>
		<behaviors>
			<serviceBehaviors>
				<behavior name="">
					<serviceMetadata httpGetEnabled="true"
													 httpsGetEnabled="true" />
					<serviceDebug includeExceptionDetailInFaults="false" />
				</behavior>
			</serviceBehaviors>
			<endpointBehaviors>
				<behavior name="RESTFriendly">
					<webHttp />
				</behavior>
			</endpointBehaviors>
		</behaviors>
		<serviceHostingEnvironment aspNetCompatibilityEnabled="true"
															 multipleSiteBindingsEnabled="true" />
		<services>
			<service name="RestfulWCFSample.SampleService">
				<endpoint address=""
									binding="webHttpBinding"
									behaviorConfiguration="RESTFriendly"
									contract="RestfulWCFSample.ISampleService"
									bindingConfiguration="SampleServiceBinding" />
				<endpoint address="mex"
									binding="mexHttpBinding"
									contract="IMetadataExchange" />
			</service>
		</services>
		<bindings>
			<basicHttpBinding>
				<binding name="BasicServiceBinding" />
			</basicHttpBinding>
			<webHttpBinding>
				<binding name="SampleServiceBinding"
								 closeTimeout="00:01:00"
								 openTimeout="00:01:00"
								 receiveTimeout="00:10:00"
								 sendTimeout="00:01:00"
								 allowCookies="false"
								 bypassProxyOnLocal="false"
								 hostNameComparisonMode="StrongWildcard"
								 maxBufferSize="5242880"
								 maxBufferPoolSize="524288"
								 maxReceivedMessageSize="5242880"
								 transferMode="Buffered"
								 useDefaultWebProxy="true">
					<readerQuotas maxDepth="32"
												maxStringContentLength="524288"
												maxArrayLength="16384"
												maxBytesPerRead="4096"
												maxNameTableCharCount="16384" />
					<!-- You probably want some kind of authentication, like HTTPS with Basic auth as shown below, depending on how you host the service.
					This is not included for the sample.
					<security mode="Transport">
						<transport clientCredentialType="Basic"
											 proxyCredentialType="None"
											 realm="" />
					</security>-->
				</binding>
			</webHttpBinding>
		</bindings>
	</system.serviceModel>
</configuration>